{
    "name": "QuestTracker",
    "script": "QuestTracker.js",
    "version": "1.2",
    "previousversions": ["1.0", "1.1"],
    "description": "# Quest Tracker\nQuest Tracker is a comprehensive tool for managing quests, rumors, and events in a tabletop RPG setting. It integrates seamlessly with Roll20 to provide detailed tracking and visualization of game elements, making it ideal for GMs and players who want to streamline their campaigns.\n\n## Features\n\n### Quest Management\n* Create, edit, and remove quests.\n* Track quest statuses (e.g., \"Started\", \"Completed\", \"Failed\").\n* Group quests into logical categories.\n\n### Rumor Handling\n* Add and manage rumors by location or quest.\n* Generate rumors dynamically.\n* Associate rumors with quest progression.\n\n### Event Scheduling\n* Schedule events with repeatable options.\n* Adjust events based on in-game calendars.\n\n### Weather and Climate Integration:\n* Dynamic weather generation based on in-game conditions.\n* Detailed descriptions of current weather conditions.\n\n### Calender Integration:\n* Track Leap years\r * Different Calander types, e.g. Harpto, Gregorian etc.\n\n### Visual Quest Tree\n* Display quests and relationships as a tree diagram.\n* Automatically handle mutually exclusive relationships.\n\n## Getting Started\nAccess all features through an intuitive graphical user interface. simply type `!qt` into chat. Navigate through menus to manage quests, rumors, and events seamlessly.\n\n## More Information?\n[See the README](https://github.com/Roll20/roll20-api-scripts/blob/master/QuestTracker/README.md)\n\n## Contributing\nContributions are welcome! Please submit pull requests or report issues on the GitHub repository: [GitHub Repository](https://github.com/Roll20/roll20-api-scripts/issues)",
    "authors": "Boli",
    "roll20userid": "3714078",
    "useroptions": [],
    "dependencies": ["CalenderData"],
    "modifies": {
        "chat": "read, write",
        "layer": "read, write",
        "paths": "read, write",
        "graphic": "read, write",
        "text": "read, write",
        "token": "read, write",
        "state.QUEST_TRACKER": "read, write"
    },
    "conflicts": []
}